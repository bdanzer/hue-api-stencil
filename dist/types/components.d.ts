/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';




export namespace Components {

  interface DpAlert {
    'alerted': boolean;
    'ms': number;
    'text': string;
    'toasty': (text: any, alert: any, ms: any) => Promise<void>;
  }
  interface DpAlertAttributes extends StencilHTMLAttributes {
    'alerted'?: boolean;
    'ms'?: number;
    'text'?: string;
  }

  interface DpRange {
    'ariaLabel': string;
    'ariaValueNow': number;
    'data': any;
    'disabled': boolean;
    'max': string;
    'min': string;
    'rangeValue': string;
  }
  interface DpRangeAttributes extends StencilHTMLAttributes {
    'ariaLabel'?: string;
    'ariaValueNow'?: number;
    'data'?: any;
    'disabled'?: boolean;
    'max'?: string;
    'min'?: string;
    'onInputChanged'?: (event: CustomEvent) => void;
    'onRangeChagned'?: (event: CustomEvent) => void;
    'rangeValue'?: string;
  }

  interface DpSwitch {
    'ariaLabel': string;
    'callback': Function;
    'data': any;
    'disabled': boolean;
    'isChecked': boolean;
    'label': string;
  }
  interface DpSwitchAttributes extends StencilHTMLAttributes {
    'ariaLabel'?: string;
    'callback'?: Function;
    'data'?: any;
    'disabled'?: boolean;
    'isChecked'?: boolean;
    'label'?: string;
    'onSwitchClicked'?: (event: CustomEvent) => void;
  }

  interface HueApp {
    'lights': object;
    'proxyServer': string;
  }
  interface HueAppAttributes extends StencilHTMLAttributes {
    'lights'?: object;
    'proxyServer'?: string;
  }

  interface HueCard {
    'alert': string;
    'bri': any;
    'lightId': string;
    'lightName': string;
    'mode': string;
    'on': boolean;
    'reachable': boolean;
  }
  interface HueCardAttributes extends StencilHTMLAttributes {
    'alert'?: string;
    'bri'?: any;
    'lightId'?: string;
    'lightName'?: string;
    'mode'?: string;
    'on'?: boolean;
    'reachable'?: boolean;
  }

  interface HueCollection {
    'group': boolean;
    'groups': object;
    'lights': any;
    'loading': boolean;
  }
  interface HueCollectionAttributes extends StencilHTMLAttributes {
    'group'?: boolean;
    'groups'?: object;
    'lights'?: any;
    'loading'?: boolean;
  }
}

declare global {
  interface StencilElementInterfaces {
    'DpAlert': Components.DpAlert;
    'DpRange': Components.DpRange;
    'DpSwitch': Components.DpSwitch;
    'HueApp': Components.HueApp;
    'HueCard': Components.HueCard;
    'HueCollection': Components.HueCollection;
  }

  interface StencilIntrinsicElements {
    'dp-alert': Components.DpAlertAttributes;
    'dp-range': Components.DpRangeAttributes;
    'dp-switch': Components.DpSwitchAttributes;
    'hue-app': Components.HueAppAttributes;
    'hue-card': Components.HueCardAttributes;
    'hue-collection': Components.HueCollectionAttributes;
  }


  interface HTMLDpAlertElement extends Components.DpAlert, HTMLStencilElement {}
  var HTMLDpAlertElement: {
    prototype: HTMLDpAlertElement;
    new (): HTMLDpAlertElement;
  };

  interface HTMLDpRangeElement extends Components.DpRange, HTMLStencilElement {}
  var HTMLDpRangeElement: {
    prototype: HTMLDpRangeElement;
    new (): HTMLDpRangeElement;
  };

  interface HTMLDpSwitchElement extends Components.DpSwitch, HTMLStencilElement {}
  var HTMLDpSwitchElement: {
    prototype: HTMLDpSwitchElement;
    new (): HTMLDpSwitchElement;
  };

  interface HTMLHueAppElement extends Components.HueApp, HTMLStencilElement {}
  var HTMLHueAppElement: {
    prototype: HTMLHueAppElement;
    new (): HTMLHueAppElement;
  };

  interface HTMLHueCardElement extends Components.HueCard, HTMLStencilElement {}
  var HTMLHueCardElement: {
    prototype: HTMLHueCardElement;
    new (): HTMLHueCardElement;
  };

  interface HTMLHueCollectionElement extends Components.HueCollection, HTMLStencilElement {}
  var HTMLHueCollectionElement: {
    prototype: HTMLHueCollectionElement;
    new (): HTMLHueCollectionElement;
  };

  interface HTMLElementTagNameMap {
    'dp-alert': HTMLDpAlertElement
    'dp-range': HTMLDpRangeElement
    'dp-switch': HTMLDpSwitchElement
    'hue-app': HTMLHueAppElement
    'hue-card': HTMLHueCardElement
    'hue-collection': HTMLHueCollectionElement
  }

  interface ElementTagNameMap {
    'dp-alert': HTMLDpAlertElement;
    'dp-range': HTMLDpRangeElement;
    'dp-switch': HTMLDpSwitchElement;
    'hue-app': HTMLHueAppElement;
    'hue-card': HTMLHueCardElement;
    'hue-collection': HTMLHueCollectionElement;
  }


}
